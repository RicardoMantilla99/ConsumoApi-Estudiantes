Build1=Default,b4a.example
File1=Layout.bal
FileGroup1=Default Group
Group=Default Group
Library1=core
Library2=json
Library3=okhttp
Library4=xui
Library5=okhttputils2
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="30"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=Emergencia
Module2=Emergencias
Module3=Starter
NumberOfFiles=1
NumberOfLibraries=5
NumberOfModules=3
Version=12.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
	
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Private txtId As EditText
	Private txtNombre As EditText
	Private txtApellido As EditText
	Private txtEdad As EditText
	Private txtInscripcion As EditText
	Private eme As Emergencias
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Layout")
	eme.Initialize
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub Button1_Click
	xui.MsgboxAsync("Hello RICARDO!", "B4X")
End Sub

Private Sub cmdDelete_Click
	Wait For (eme.Delete(txtId.Text)) Complete( r As Boolean)
	If r Then
		Msgbox("registro eliminado ", "Ok")
	Else
		Msgbox("registro no eliminado ", "ERROR !!!")
	End If
End Sub

Private Sub cmdUpdate_Click
	Wait For (eme.Update(txtId.Text, txtNombre.Text, txtApellido.Text, txtEdad.Text, txtId.Text)) Complete(e As Boolean)
	If e Then
		Msgbox("Datos actualizados", "Ok")
	Else
		Msgbox("Datos NO actualizados", "ERROR !!!!")
	End If
End Sub

Private Sub cmdInsert_Click
	Wait For (eme.Insert(txtId.Text, txtNombre.Text, txtApellido.Text, txtEdad.Text, txtId.Text)) Complete(e As Emergencia)
	If e.id <> 0 Then
		Msgbox("datos insertados", "Ok")
	Else
		Msgbox("datos NO insertados", "ERROR !!!!")
	End If
End Sub

Private Sub cmdSelectOne_Click
	Wait For (eme.SelectOne(txtId.Text)) Complete(p As Emergencia)
	If p.id > 0 Then
		txtId.Text = p.id
		txtNombre.Text = p.nombre
		txtApellido.Text = p.apellido
		txtEdad.Text = p.edad
		txtId.Text = p.inscripcion
	
		Msgbox("datos encontrados","")
	Else
		Msgbox("datos no encontrados","ERROR")
	End If
	
End Sub